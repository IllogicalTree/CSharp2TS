<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CSharp2TS.CLI.Generators.Entities" #>
// Auto-generated from <#= Type.Name #>.cs

import { apiClient } from './apiService';
<# foreach (var item in Imports) { #>
import <#= item.Name #> from '<#= item.Path #>';
<# } #>

export default {
<# foreach (var item in Items) { #>
  async <#= item.MethodName #>(<#= string.Join(", ", item.AllParams.Select(i => $"{i.Name}: {i.Property.TSTypeFull}")) #>): Promise<<#= item.ReturnType #>> {
    var response = await apiClient.<#= item.HttpMethod #><<#= item.ReturnType #>>(`<#= item.Route #><#= item.QueryString #>`<# if (item.HttpMethod != Consts.HttpGet) { #>, <#= item.BodyParam.Name #><# } #>);
    return response.data;
  },
<# } #>
};

<#+
public Type Type { get; set; }
public IList<TSImport> Imports { get; set; }
public IList<TSServiceMethod> Items { get; set; }
#>